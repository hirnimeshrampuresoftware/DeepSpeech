name: "Python binding"
description: "Binding a python binding"
inputs:
  build_flavor:
    description: "Python package name"
    required: true
  numpy_build:
    description: "NumPy build dependecy"
    required: true
  numpy_dep:
    description: "NumPy runtime dependecy"
    required: true
  local_cflags:
    description: "CFLAGS for Python package"
    required: false
    default: ""
  local_ldflags:
    description: "LDFLAGS for Python package"
    required: false
    default: ""
  local_libs:
    description: "LIBS for Python package"
    required: false
    default: ""
  target:
    description: "TARGET value"
    required: false
    default: "host"
  chroot:
    description: "RASPBIAN value"
    required: false
    default: ""
runs:
  using: "composite"
  steps:
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Build Wheel
      run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
            quay.io/pypa/manylinux2014_aarch64 \
            bash -exc '/opt/python/cp37-cp37m/bin/python -m venv .env && \
            source .env/bin/activate && \
            pip install --upgrade pip && \
            python --version && \
            pip --version && \
            python3 -m deepspeech-build && \
            mkdir -p wheels && \
            set -xe && \
            PROJECT_NAME="deepspeech" && \
            if [ "${{ inputs.build_flavor }}" = "tflite" ]; then
              PROJECT_NAME="deepspeech-tflite"
            fi && \
            source deepspeech-build/bin/activate && \
            NUMPY_BUILD_VERSION="${{ inputs.numpy_build }}" \
            NUMPY_DEP_VERSION="${{ inputs.numpy_dep }}" \
            EXTRA_CFLAGS=${{ inputs.local_cflags }} \
            EXTRA_LDFLAGS=${{ inputs.local_ldflags }} \
            EXTRA_LIBS=${{ inputs.local_libs }} \
              make -C native_client/python/ \
                TARGET=${{ inputs.target }} \
                RASPBIAN=${{ inputs.chroot }} \
                SETUP_FLAGS="--project_name ${PROJECT_NAME}" \
                bindings-clean bindings && \ 
            deactivate && \
            cp native_client/python/dist/*.whl wheels && \
            make -C native_client/python/ bindings-clean && \
            deactivate'
